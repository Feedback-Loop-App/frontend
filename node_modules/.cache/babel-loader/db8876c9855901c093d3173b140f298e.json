{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldunn-oconnor/Documents/GA/sei/projects/p3/frontend/feedback-loop/src/components/homeview/feed/cards/PostInteractions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport Comment from './Comment';\nimport { DataContext } from '../../../hidden/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostInteractions({\n  id,\n  likes,\n  comments\n}) {\n  _s();\n\n  const {\n    thisUser\n  } = useContext(DataContext);\n  const [postLikes, setPostLikes] = useState(likes);\n  const [isLiked, setIsLiked] = useState(false);\n  const [addNew, setAddNew] = useState(false);\n  const [commentText, setCommentText] = useState('');\n\n  const handleClickLike = e => {\n    let thisLike = isLiked;\n    setIsLiked(!thisLike); // (thisLike) ?\n    // e.targetclassName = \"fas fa-heart like-icon\" :\n    // e.targetclassName = \"far fa-heart like-icon\" ;\n\n    let tmp = parseInt(postLikes);\n    let newLikes = thisLike ? tmp - 1 : tmp + 1;\n    setPostLikes(newLikes);\n    axios.put(`http://localhost:4000/posts/${id}`, {\n      likes: newLikes\n    });\n  };\n\n  const handleCommentChange = e => {\n    setCommentText(e.target.value);\n  };\n\n  const createComment = () => {\n    let newComment = {\n      username: thisUser.username,\n      body: commentText\n    };\n    let newComments = comments;\n    newComments.push(newComment);\n    axios.put(`http://localhost:4000/posts/${id}`, {\n      comments: newComments\n    });\n    setAddNew(false);\n    setCommentText('');\n  };\n\n  useEffect(() => {}, [id, postLikes, addNew]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostInteractions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interactions-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"likes-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"like-button\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: handleClickLike,\n            className: `${isLiked ? \"fas\" : \"far\"} fa-heart like-icon`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"likes-num\",\n          children: postLikes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"comment-button\",\n        onClick: () => setAddNew(true),\n        children: \"comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-div\",\n      children: [comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, id + '-comment-' + (comments.indexOf(comment) + 1), false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 28\n        }, this);\n      }), addNew && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"new-comment-input\",\n          type: \"text\",\n          placeholder: \"add comment here\",\n          value: commentText,\n          onChange: handleCommentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-comment-button\",\n          type: \"button\",\n          onClick: createComment,\n          children: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostInteractions, \"NlIktdMnxv9ZZO3xPykbD+B3gQU=\");\n\n_c = PostInteractions;\nexport default PostInteractions;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostInteractions\");","map":{"version":3,"sources":["/Users/michaeldunn-oconnor/Documents/GA/sei/projects/p3/frontend/feedback-loop/src/components/homeview/feed/cards/PostInteractions.jsx"],"names":["React","useState","useEffect","useContext","axios","Comment","DataContext","PostInteractions","id","likes","comments","thisUser","postLikes","setPostLikes","isLiked","setIsLiked","addNew","setAddNew","commentText","setCommentText","handleClickLike","e","thisLike","tmp","parseInt","newLikes","put","handleCommentChange","target","value","createComment","newComment","username","body","newComments","push","map","comment","indexOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport Comment from './Comment';\nimport { DataContext } from '../../../hidden/DataContext';\n\nfunction PostInteractions({ id, likes, comments }) {\n\n    const { thisUser } = useContext(DataContext);\n\n    const [postLikes, setPostLikes] = useState(likes);\n    const [isLiked, setIsLiked] = useState(false);\n    const [addNew, setAddNew] =useState(false);\n    const [commentText, setCommentText] = useState('');\n    \n\n    const handleClickLike = (e) => {\n        let thisLike = isLiked;\n        setIsLiked(!thisLike);\n\n        // (thisLike) ?\n        // e.targetclassName = \"fas fa-heart like-icon\" :\n        // e.targetclassName = \"far fa-heart like-icon\" ;\n\n        let tmp = parseInt(postLikes)\n        let newLikes = thisLike ? tmp - 1 : tmp + 1\n        setPostLikes(newLikes)\n        \n        axios.put(`http://localhost:4000/posts/${id}`, {likes: newLikes});\n        \n    }\n\n    const handleCommentChange = (e) => {\n        setCommentText(e.target.value);\n    }\n\n    const createComment = () => {\n        let newComment = {\n            username: thisUser.username,\n            body: commentText\n        }\n\n        let newComments = comments;\n        newComments.push(newComment);\n\n        axios.put(`http://localhost:4000/posts/${id}`, {comments: newComments});\n\n        setAddNew(false);\n        setCommentText('');\n    }\n    \n\n\n    useEffect(() => {\n    }, [id, postLikes, addNew])\n\n    return (\n        <div className='PostInteractions'>\n            <div className='interactions-div'>\n                <div className='likes-div'>\n                    <button className='like-button'><i onClick={handleClickLike} className={`${(isLiked) ? \"fas\" : \"far\"} fa-heart like-icon`}></i></button>\n                    <h4 className='likes-num'>{postLikes}</h4>\n                </div>\n                <button className='comment-button' onClick={() => setAddNew(true)} >comment</button>\n            </div>\n            \n            <hr />\n            <div className='comments-div'>\n                {comments.map((comment)=> {\n                    return <Comment key={id + '-comment-' + (comments.indexOf(comment) + 1)} comment={comment} />\n                })}\n                {addNew &&\n                    <div className='comment-item'>\n                        <input className='new-comment-input' type='text' placeholder='add comment here' value={commentText} onChange={handleCommentChange} />\n                        <button className='new-comment-button' type='button' onClick={createComment}>post</button>\n                    </div>\n                }\n            </div>\n            \n            \n        </div>\n    );\n}\n\nexport default PostInteractions;"]},"metadata":{},"sourceType":"module"}