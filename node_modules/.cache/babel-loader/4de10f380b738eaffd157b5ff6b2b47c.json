{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldunn-oconnor/Documents/GA/sei/projects/p3/frontend/feedback-loop/src/components/homeview/modals/LogInModal.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../../../styles/LogInModal.css';\nimport { DataContext } from '../../hidden/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LogInModal() {\n  _s();\n\n  const initialLoginState = {\n    loggedIn: false,\n    username: '',\n    email: '',\n    password: ''\n  };\n  const [loginState, setLoginState] = useState(initialLoginState);\n  const [existingUser, setExistingUser] = useState(true);\n  const [userNotFound, setUserNotFound] = useState(false);\n  const {\n    thisUser,\n    setThisUser,\n    users,\n    setUsers,\n    setLogIn,\n    initialUserState,\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(DataContext);\n\n  const handleChange = event => {\n    setLoginState({ ...loginState,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  const handleNewUsername = e => {\n    setNewUsername(e.target.value);\n  };\n\n  const handleNewEmail = e => {\n    setNewEmail(e.target.value);\n  };\n\n  const logOut = () => {\n    setThisUser(initialUserState);\n    setUserNotFound(false);\n    setIsLoggedIn(false);\n  };\n\n  const handleExistingSubmit = () => {\n    setNoUser(false);\n    let thisUsername = usernameLogIn;\n    setUsernameLogIn('');\n    users.forEach(user => {\n      if (thisUsername === user.username) {\n        setThisUser(user);\n        setLogIn(false);\n        setIsLoggedIn(true);\n      } else {\n        setNoUser(true);\n      }\n    });\n  };\n\n  const handleNewSubmit = () => {\n    let newUser = {\n      username: newUsername,\n      email: newEmail\n    };\n    axios.post('http://localhost:4000/users').then(() => {\n      setUsers([...users, newUser]);\n    }).then(() => {}).catch(console.error);\n  };\n\n  useEffect(() => {\n    console.log(thisUser);\n  }, [existingUser, thisUser, userNotFound, loginState.isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LogInModal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-textbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logged-in-as\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"log-in-header\",\n            children: \"logged in as\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"logged-in-username\",\n            children: thisUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabs\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `existing-user-button tab-button ${existingUser ? 'selected' : null}`,\n              type: \"button\",\n              onClick: () => setExistingUser(true),\n              children: \"existing user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `new-user-button tab-button ${existingUser ? null : 'selected'}`,\n              type: \"button\",\n              onClick: () => setExistingUser(false),\n              children: \"new user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), loginState.existinguserLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"username\",\n              id: \"username\",\n              value: loginState.username,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"password\",\n              id: \"password\",\n              value: loginState.password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), loginState.userNotFound ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-user-found\",\n              children: \"user doesn't exist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-user-found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), !loginState.existinguserLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"username\",\n              value: newUsername,\n              onChange: handleNewUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"email\",\n              value: newEmail,\n              onChange: handleNewEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: logOut,\n            children: \"log out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), !isLoggedIn && loginState.existinguserLogin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: handleExistingSubmit,\n            children: \"log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), !isLoggedIn && !loginState.existinguserLogin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: handleNewSubmit,\n            children: \"log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: () => setLogIn(false),\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LogInModal, \"K7w1WQKTmvrBjYzh/6S9frTUalQ=\");\n\n_c = LogInModal;\nexport default LogInModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInModal\");","map":{"version":3,"sources":["/Users/michaeldunn-oconnor/Documents/GA/sei/projects/p3/frontend/feedback-loop/src/components/homeview/modals/LogInModal.jsx"],"names":["axios","React","useContext","useEffect","useState","DataContext","LogInModal","initialLoginState","loggedIn","username","email","password","loginState","setLoginState","existingUser","setExistingUser","userNotFound","setUserNotFound","thisUser","setThisUser","users","setUsers","setLogIn","initialUserState","isLoggedIn","setIsLoggedIn","handleChange","event","target","id","value","handleNewUsername","e","setNewUsername","handleNewEmail","setNewEmail","logOut","handleExistingSubmit","setNoUser","thisUsername","usernameLogIn","setUsernameLogIn","forEach","user","handleNewSubmit","newUser","newUsername","newEmail","post","then","catch","console","error","log","existinguserLogin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,gCAAP;AACA,SAASC,WAAT,QAA4B,0BAA5B;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAElB,QAAMC,iBAAiB,GAAE;AACrBC,IAAAA,QAAQ,EAAE,KADW;AAErBC,IAAAA,QAAQ,EAAE,EAFW;AAGrBC,IAAAA,KAAK,EAAE,EAHc;AAIrBC,IAAAA,QAAQ,EAAE;AAJW,GAAzB;AAOA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAACG,iBAAD,CAA5C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM;AAAEc,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA,QAAhC;AAA0CC,IAAAA,QAA1C;AAAoDC,IAAAA,gBAApD;AAAsEC,IAAAA,UAAtE;AAAkFC,IAAAA;AAAlF,MAAoGvB,UAAU,CAACG,WAAD,CAApH;;AAEA,QAAMqB,YAAY,GAAIC,KAAD,IAAW;AAC5Bd,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiB,OAACe,KAAK,CAACC,MAAN,CAAaC,EAAd,GAAmBF,KAAK,CAACC,MAAN,CAAaE;AAAjD,KAAD,CAAb;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7BC,IAAAA,cAAc,CAACD,CAAC,CAACJ,MAAF,CAASE,KAAV,CAAd;AACH,GAFD;;AAIA,QAAMI,cAAc,GAAIF,CAAD,IAAO;AAC1BG,IAAAA,WAAW,CAACH,CAAC,CAACJ,MAAF,CAASE,KAAV,CAAX;AACH,GAFD;;AAIA,QAAMM,MAAM,GAAG,MAAM;AACjBjB,IAAAA,WAAW,CAACI,gBAAD,CAAX;AACAN,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAQ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAJD;;AAMA,QAAMY,oBAAoB,GAAG,MAAM;AAE/BC,IAAAA,SAAS,CAAC,KAAD,CAAT;AAEA,QAAIC,YAAY,GAAGC,aAAnB;AACAC,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AAEArB,IAAAA,KAAK,CAACsB,OAAN,CAAcC,IAAI,IAAI;AAClB,UAAIJ,YAAY,KAAKI,IAAI,CAAClC,QAA1B,EAAoC;AAChCU,QAAAA,WAAW,CAACwB,IAAD,CAAX;AACArB,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAG,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH,OAJD,MAIO;AACHa,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,KARD;AASH,GAhBD;;AAkBA,QAAMM,eAAe,GAAG,MAAM;AAC1B,QAAIC,OAAO,GAAG;AACVpC,MAAAA,QAAQ,EAAEqC,WADA;AAEVpC,MAAAA,KAAK,EAAEqC;AAFG,KAAd;AAKA/C,IAAAA,KAAK,CAACgD,IAAN,CAAW,6BAAX,EACKC,IADL,CACU,MAAM;AACR5B,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWyB,OAAX,CAAD,CAAR;AACH,KAHL,EAIKI,IAJL,CAIU,MAAM,CAEX,CANL,EAOKC,KAPL,CAOWC,OAAO,CAACC,KAPnB;AAUH,GAhBD;;AAkBAjD,EAAAA,SAAS,CAAC,MAAM;AACZgD,IAAAA,OAAO,CAACE,GAAR,CAAYnC,QAAZ;AACH,GAFQ,EAEN,CAACJ,YAAD,EAAeI,QAAf,EAAyBF,YAAzB,EAAuCJ,UAAU,CAACY,UAAlD,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,oBAAd;AAAA,sBAAoCN,QAAQ,CAACT;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKK,CAACe,UAAD,iBACG;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACI;AAAQ,cAAA,SAAS,EAAG,mCAAmCV,YAAD,GAAiB,UAAjB,GAA8B,IAAK,EAAzF;AAA4F,cAAA,IAAI,EAAC,QAAjG;AAA0G,cAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,IAAD,CAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,SAAS,EAAG,8BAA8BD,YAAD,GAAiB,IAAjB,GAAwB,UAAW,EAApF;AAAuF,cAAA,IAAI,EAAC,QAA5F;AAAqG,cAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,KAAD,CAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAKKH,UAAU,CAAC0C,iBAAX,iBACG;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAO,cAAA,SAAS,EAAC,qBAAjB;AAAuC,cAAA,IAAI,EAAC,MAA5C;AAAmD,cAAA,WAAW,EAAC,UAA/D;AAA0E,cAAA,EAAE,EAAC,UAA7E;AAAwF,cAAA,KAAK,EAAE1C,UAAU,CAACH,QAA1G;AAAoH,cAAA,QAAQ,EAAEiB;AAA9H;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,SAAS,EAAC,qBAAjB;AAAuC,cAAA,IAAI,EAAC,MAA5C;AAAmD,cAAA,WAAW,EAAC,UAA/D;AAA0E,cAAA,EAAE,EAAC,UAA7E;AAAwF,cAAA,KAAK,EAAEd,UAAU,CAACD,QAA1G;AAAoH,cAAA,QAAQ,EAAEe;AAA9H;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGMd,UAAU,CAACI,YAAZ,gBACG;AAAG,cAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,gBAEG;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBALR;AAAA;AAAA;AAAA;AAAA;AAAA,kBANR,EAeK,CAACJ,UAAU,CAAC0C,iBAAZ,iBACG;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAO,cAAA,SAAS,EAAC,qBAAjB;AAAuC,cAAA,IAAI,EAAC,MAA5C;AAAmD,cAAA,WAAW,EAAC,UAA/D;AAA0E,cAAA,KAAK,EAAER,WAAjF;AAA8F,cAAA,QAAQ,EAAEf;AAAxG;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,SAAS,EAAC,qBAAjB;AAAuC,cAAA,IAAI,EAAC,MAA5C;AAAmD,cAAA,WAAW,EAAC,OAA/D;AAAuE,cAAA,KAAK,EAAEgB,QAA9E;AAAwF,cAAA,QAAQ,EAAEb;AAAlG;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBR;AAAA;AAAA;AAAA;AAAA;AAAA,gBANR,eA6BI;AAAA,qBACKV,UAAU,iBACP;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAsC,YAAA,IAAI,EAAC,QAA3C;AAAoD,YAAA,OAAO,EAAEY,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR,EAIK,CAACZ,UAAD,IAAeZ,UAAU,CAAC0C,iBAA1B,iBACG;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAsC,YAAA,IAAI,EAAC,QAA3C;AAAoD,YAAA,OAAO,EAAEjB,oBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALR,EAOK,CAACb,UAAD,IAAe,CAACZ,UAAU,CAAC0C,iBAA3B,iBACG;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAsC,YAAA,IAAI,EAAC,QAA3C;AAAoD,YAAA,OAAO,EAAEV,eAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARR,eAUI;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAsC,YAAA,IAAI,EAAC,QAA3C;AAAoD,YAAA,OAAO,EAAE,MAAMtB,QAAQ,CAAC,KAAD,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH;;GAzHQhB,U;;KAAAA,U;AA2HT,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../../../styles/LogInModal.css';\nimport { DataContext } from '../../hidden/DataContext';\n\nfunction LogInModal() {\n\n    const initialLoginState ={\n        loggedIn: false,\n        username: '',\n        email: '',\n        password: ''\n    }\n\n    const [loginState, setLoginState] = useState(initialLoginState);\n    const [existingUser, setExistingUser] = useState(true);\n    const [userNotFound, setUserNotFound] = useState(false);\n\n    const { thisUser, setThisUser, users, setUsers, setLogIn, initialUserState, isLoggedIn, setIsLoggedIn } = useContext(DataContext);\n\n    const handleChange = (event) => {\n        setLoginState({ ...loginState, [event.target.id]: event.target.value });\n    };\n\n    const handleNewUsername = (e) => {\n        setNewUsername(e.target.value);\n    }\n\n    const handleNewEmail = (e) => {\n        setNewEmail(e.target.value);\n    }\n\n    const logOut = () => {\n        setThisUser(initialUserState);\n        setUserNotFound(false);\n        setIsLoggedIn(false);\n    }\n\n    const handleExistingSubmit = () => {\n\n        setNoUser(false);\n\n        let thisUsername = usernameLogIn;\n        setUsernameLogIn('');\n\n        users.forEach(user => {\n            if (thisUsername === user.username) {\n                setThisUser(user);\n                setLogIn(false);\n                setIsLoggedIn(true);\n            } else {\n                setNoUser(true);\n            }\n        })\n    }\n\n    const handleNewSubmit = () => {\n        let newUser = {\n            username: newUsername,\n            email: newEmail\n        }\n\n        axios.post('http://localhost:4000/users')\n            .then(() => {\n                setUsers([...users, newUser])\n            })\n            .then(() => {\n\n            })\n            .catch(console.error)\n\n        \n    }\n \n    useEffect(() => {\n        console.log(thisUser)\n    }, [existingUser, thisUser, userNotFound, loginState.isLoggedIn])\n\n    return (\n        <div className='LogInModal'>\n            <div className='modal'>\n                <div className='modal-textbox'>\n                    <div className='logged-in-as'>\n                        <h5 className='log-in-header'>logged in as</h5>\n                        <h3 className='logged-in-username'>{thisUser.username}</h3>\n                    </div>\n                    {!isLoggedIn && \n                        <div>\n                            <div className='tabs'>\n                                <button className={`existing-user-button tab-button ${(existingUser) ? 'selected' : null}`} type='button' onClick={() => setExistingUser(true)} >existing user</button>\n                                <button className={`new-user-button tab-button ${(existingUser) ? null : 'selected'}`} type='button' onClick={() => setExistingUser(false)} >new user</button>\n                            </div>\n                            {loginState.existinguserLogin && \n                                <div className='input-div'>\n                                    <input className='existing-user-input' type='text' placeholder='username' id=\"username\" value={loginState.username} onChange={handleChange} />\n                                    <input className='existing-user-input' type='text' placeholder='password' id=\"password\" value={loginState.password} onChange={handleChange} />\n                                    {(loginState.userNotFound) ? \n                                        <p className='no-user-found'>user doesn't exist</p> :\n                                        <p className='no-user-found'></p>\n                                    }\n                                </div>\n                            }\n                            {!loginState.existinguserLogin && \n                                <div className='input-div'>\n                                    <input className='existing-user-input' type='text' placeholder='username' value={newUsername} onChange={handleNewUsername} />\n                                    <input className='existing-user-input' type='text' placeholder='email' value={newEmail} onChange={handleNewEmail} />\n                                </div>\n                            }\n                        </div>\n                    }\n                    <div>\n                        {isLoggedIn && \n                            <button className='login-form-button' type='button' onClick={logOut} >log out</button>\n                        }\n                        {!isLoggedIn && loginState.existinguserLogin &&\n                            <button className='login-form-button' type='button' onClick={handleExistingSubmit} >log in</button>\n                        }\n                        {!isLoggedIn && !loginState.existinguserLogin && \n                            <button className='login-form-button' type='button' onClick={handleNewSubmit} >log in</button>\n                        }\n                        <button className='login-form-button' type='button' onClick={() => setLogIn(false)} >close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LogInModal;"]},"metadata":{},"sourceType":"module"}