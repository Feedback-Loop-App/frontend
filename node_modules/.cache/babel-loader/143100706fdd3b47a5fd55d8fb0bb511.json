{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldunn-oconnor/Documents/GA/sei/projects/p3/frontend/feedback-loop/src/components/homeview/modals/LogInModal.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../../../styles/LogInModal.css';\nimport { DataContext } from '../../hidden/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LogInModal() {\n  _s();\n\n  const initialLoginState = {\n    username: '',\n    newUsername: '',\n    email: '',\n    password: '',\n    newPassword: '',\n    verifyPassword: ''\n  };\n  const [loginState, setLoginState] = useState(initialLoginState);\n  const [existingUserLogin, setExistingUserLogin] = useState(true);\n  const [userNotFound, setUserNotFound] = useState(false);\n  const {\n    thisUser,\n    setThisUser,\n    setLogIn,\n    initialUserState,\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(DataContext);\n\n  const handleChange = event => {\n    setLoginState({ ...loginState,\n      [event.target.id]: event.target.value\n    });\n    console.log(event.target.id, event.target.vale);\n  };\n\n  const logOut = () => {\n    setThisUser(initialUserState);\n    setUserNotFound(false);\n    setIsLoggedIn(false);\n    localStorage.clear();\n  };\n\n  const handleExistingSubmit = async () => {\n    console.log(\"logging in\");\n    let loginData = {\n      username: loginState.username,\n      password: loginState.password\n    };\n    axios.get('http://localhost:4000/login/', loginData).then(res => {\n      if (res.data) {\n        setThisUser(res.data);\n        localStorage.setItem('user', res.data.username);\n        console.log(res.data.username);\n      } else {\n        console.log('login failed');\n      }\n    });\n  };\n\n  const handleNewSubmit = async () => {\n    console.log(\"creating account\");\n\n    if (loginState.password !== loginState.verifyPassword) {\n      console.log(\"error\");\n    } else {\n      const newUser = {\n        username: loginState.username,\n        email: loginState.email,\n        password: loginState.password\n      };\n      axios.post('http://localhost:4000/users', newUser).then(res => {\n        setThisUser(res.data);\n        localStorage.setItem('user', res.data.username);\n        console.log(res.data.username);\n      });\n    }\n  };\n\n  useEffect(() => {\n    console.log(thisUser);\n  }, [existingUserLogin, thisUser, userNotFound, isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LogInModal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-textbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logged-in-as\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"log-in-header\",\n            children: \"logged in as\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"logged-in-username\",\n            children: thisUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabs\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `existing-user-button tab-button ${existingUserLogin ? 'selected' : null}`,\n              type: \"button\",\n              onClick: () => setExistingUserLogin(true),\n              children: \"existing user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `new-user-button tab-button ${existingUserLogin ? null : 'selected'}`,\n              type: \"button\",\n              onClick: () => setExistingUserLogin(false),\n              children: \"new user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), existingUserLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"username\",\n              id: \"username\",\n              value: loginState.username,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"password\",\n              id: \"password\",\n              value: loginState.password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this), userNotFound ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-user-found\",\n              children: \"login failed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 55\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this), !existingUserLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"username\",\n              id: \"newUsername\",\n              value: loginState.username,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"email\",\n              id: \"email\",\n              value: loginState.email,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"password\",\n              id: \"newPassword\",\n              value: loginState.password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"verify password\",\n              id: \"verifyPassword\",\n              value: loginState.verifyPassword,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: logOut,\n            children: \"log out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), !isLoggedIn && existingUserLogin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: handleExistingSubmit,\n            children: \"log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), !isLoggedIn && !existingUserLogin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: handleNewSubmit,\n            children: \"create account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: () => setLogIn(false),\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LogInModal, \"d/H7e5F9szVeU30i0yUymNJ3Rco=\");\n\n_c = LogInModal;\nexport default LogInModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInModal\");","map":{"version":3,"sources":["/Users/michaeldunn-oconnor/Documents/GA/sei/projects/p3/frontend/feedback-loop/src/components/homeview/modals/LogInModal.jsx"],"names":["axios","React","useContext","useEffect","useState","DataContext","LogInModal","initialLoginState","username","newUsername","email","password","newPassword","verifyPassword","loginState","setLoginState","existingUserLogin","setExistingUserLogin","userNotFound","setUserNotFound","thisUser","setThisUser","setLogIn","initialUserState","isLoggedIn","setIsLoggedIn","handleChange","event","target","id","value","console","log","vale","logOut","localStorage","clear","handleExistingSubmit","loginData","get","then","res","data","setItem","handleNewSubmit","newUser","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../../../styles/LogInModal.css';\nimport { DataContext } from '../../hidden/DataContext';\n\nfunction LogInModal() {\n\n    const initialLoginState = {\n        username: '',\n        newUsername: '',\n        email: '',\n        password: '',\n        newPassword: '',\n        verifyPassword: ''\n    };\n    const [loginState, setLoginState] = useState(initialLoginState);\n    const [existingUserLogin, setExistingUserLogin] = useState(true);\n    const [userNotFound, setUserNotFound] = useState(false);\n\n    const { thisUser, setThisUser, setLogIn, initialUserState, isLoggedIn, setIsLoggedIn } = useContext(DataContext);\n\n    const handleChange = (event) => {\n        setLoginState({ ...loginState, [event.target.id]: event.target.value });\n        console.log(event.target.id, event.target.vale);\n    };\n\n    const logOut = () => {\n        setThisUser(initialUserState);\n        setUserNotFound(false);\n        setIsLoggedIn(false);\n        localStorage.clear();\n    };\n\n    const handleExistingSubmit = async () => {\n        console.log(\"logging in\");\n\n        let loginData = {\n            username: loginState.username,\n            password: loginState.password\n        };\n\n        axios.get('http://localhost:4000/login/', loginData)\n        .then((res) => {\n            if (res.data){\n                setThisUser(res.data);\n                localStorage.setItem('user', res.data.username)\n                console.log(res.data.username)\n            }\n            else{\n                console.log('login failed');\n            }\n        })\n    };\n\n    const handleNewSubmit = async () => {\n        console.log(\"creating account\");\n        \n        if (loginState.password !== loginState.verifyPassword){\n            console.log(\"error\");\n        } else{\n            \n            const newUser = {\n                username : loginState.username,\n                email : loginState.email,\n                password : loginState.password\n            }\n\n            axios.post('http://localhost:4000/users', newUser)\n            .then((res) => {\n                setThisUser(res.data);\n                localStorage.setItem('user', res.data.username)\n                console.log(res.data.username)\n            })\n\n        }    \n\n    }\n \n    useEffect(() => {\n        console.log(thisUser)\n    }, [existingUserLogin, thisUser, userNotFound, isLoggedIn])\n\n    return (\n        <div className='LogInModal'>\n            <div className='modal'>\n                <div className='modal-textbox'>\n                    <div className='logged-in-as'>\n                        <h5 className='log-in-header'>logged in as</h5>\n                        <h3 className='logged-in-username'>{thisUser.username}</h3>\n                    </div>\n                    {!isLoggedIn && \n                        <div>\n                            <div className='tabs'>\n                                <button className={`existing-user-button tab-button ${(existingUserLogin) ? 'selected' : null}`} type='button' onClick={() => setExistingUserLogin(true)} >existing user</button>\n                                <button className={`new-user-button tab-button ${(existingUserLogin) ? null : 'selected'}`} type='button' onClick={() => setExistingUserLogin(false)} >new user</button>\n                            </div>\n                            {existingUserLogin && \n                                <div className='input-div'>\n                                    <input className='existing-user-input' type='text' placeholder='username' id=\"username\" value={loginState.username} onChange={handleChange} />\n                                    <input className='existing-user-input' type='text' placeholder='password' id=\"password\" value={loginState.password} onChange={handleChange} />\n                                    {(userNotFound) ? <p className='no-user-found'>login failed</p> : null }\n                                </div>\n                            }\n                            {!existingUserLogin && \n                                <div className='input-div'>\n                                    <input className='existing-user-input' type='text' placeholder='username' id=\"newUsername\" value={loginState.username} onChange={handleChange} />\n                                    <input className='existing-user-input' type='text' placeholder='email' id=\"email\" value={loginState.email} onChange={handleChange} />\n                                    <input className='existing-user-input' type='text' placeholder='password' id=\"newPassword\" value={loginState.password} onChange={handleChange} />\n                                    <input className='existing-user-input' type='text' placeholder='verify password' id=\"verifyPassword\" value={loginState.verifyPassword} onChange={handleChange} />\n                                </div>\n                            }\n                        </div>\n                    }\n                    <div>\n                        {isLoggedIn && \n                            <button className='login-form-button' type='button' onClick={logOut} >log out</button>\n                        }\n                        {!isLoggedIn && existingUserLogin &&\n                            <button className='login-form-button' type='button' onClick={handleExistingSubmit} >log in</button>\n                        }\n                        {!isLoggedIn && !existingUserLogin && \n                            <button className='login-form-button' type='button' onClick={handleNewSubmit} >create account</button>\n                        }\n                        <button className='login-form-button' type='button' onClick={() => setLogIn(false)} >close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LogInModal;"]},"metadata":{},"sourceType":"module"}