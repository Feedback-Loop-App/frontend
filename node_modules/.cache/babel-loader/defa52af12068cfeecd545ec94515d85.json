{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldunn-oconnor/Documents/GA/sei/projects/p3/frontend/feedback-loop/src/components/homeview/modals/LogInModal.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../../../styles/LogInModal.css';\nimport { DataContext } from '../../hidden/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LogInModal() {\n  _s();\n\n  const initialLoginState = {\n    loggedIn: false,\n    username: '',\n    email: '',\n    password: '',\n    verifyPassword: ''\n  };\n  const [loginState, setLoginState] = useState(initialLoginState);\n  const [existingUserLogin, setExistingUserLogin] = useState(true);\n  const [userNotFound, setUserNotFound] = useState(false);\n  const {\n    thisUser,\n    setThisUser,\n    users,\n    setUsers,\n    setLogIn,\n    initialUserState,\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(DataContext);\n\n  const handleChange = event => {\n    setLoginState({ ...loginState,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  const logOut = () => {\n    setThisUser(initialUserState);\n    setUserNotFound(false);\n    setIsLoggedIn(false);\n  };\n\n  const handleExistingSubmit = async () => {\n    console.log(\"logging in\");\n  }; // const handleSubmit = () => {\n  //     let newPost = {\n  //         username: thisUser.username,\n  //         title: titleValue,\n  //         body: bodyValue\n  //     }\n  //     axios.post('http://localhost:4000/posts', newPost)\n  //         .then(getPosts());\n  //     setTitleValue('');\n  //     setBodyValue('');\n  //     setAddPost(false);\n  // }\n\n\n  const handleNewSubmit = async () => {\n    console.log(\"creating account\");\n\n    if (loginState.password !== loginState.verifyPassword) {\n      console.log(\"error\");\n    } else {\n      const newUser = {\n        username: loginState.username,\n        email: loginState.email,\n        password: loginState.password\n      };\n      axios.post('http://localhost:4000/users', newUser).then(res => {\n        setThisUser(res.data);\n        localStorage.setItem('user', res.data);\n        console.log(res.data.username);\n      });\n    }\n  };\n\n  useEffect(() => {\n    console.log(thisUser);\n  }, [existingUserLogin, thisUser, userNotFound, loginState.loggedIn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LogInModal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-textbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logged-in-as\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"log-in-header\",\n            children: \"logged in as\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"logged-in-username\",\n            children: thisUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabs\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `existing-user-button tab-button ${existingUserLogin ? 'selected' : null}`,\n              type: \"button\",\n              onClick: () => setExistingUserLogin(true),\n              children: \"existing user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `new-user-button tab-button ${existingUserLogin ? null : 'selected'}`,\n              type: \"button\",\n              onClick: () => setExistingUserLogin(false),\n              children: \"new user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), existingUserLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"username\",\n              id: \"username\",\n              value: loginState.username,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"password\",\n              id: \"password\",\n              value: loginState.password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), userNotFound ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-user-found\",\n              children: \"user doesn't exist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 55\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), !existingUserLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"username\",\n              id: \"username\",\n              value: loginState.username,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"email\",\n              id: \"email\",\n              value: loginState.email,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"password\",\n              id: \"password\",\n              value: loginState.password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"existing-user-input\",\n              type: \"text\",\n              placeholder: \"verify password\",\n              id: \"verifyPassword\",\n              value: loginState.verifyPassword,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [loginState.loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: logOut,\n            children: \"log out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), !loginState.loggedIn && existingUserLogin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: handleExistingSubmit,\n            children: \"log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), !loginState.loggedIn && !existingUserLogin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: handleNewSubmit,\n            children: \"create account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-form-button\",\n            type: \"button\",\n            onClick: () => setLogIn(false),\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LogInModal, \"VsiK97hvRskTeFs/Yt9ftwpIa98=\");\n\n_c = LogInModal;\nexport default LogInModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInModal\");","map":{"version":3,"sources":["/Users/michaeldunn-oconnor/Documents/GA/sei/projects/p3/frontend/feedback-loop/src/components/homeview/modals/LogInModal.jsx"],"names":["axios","React","useContext","useEffect","useState","DataContext","LogInModal","initialLoginState","loggedIn","username","email","password","verifyPassword","loginState","setLoginState","existingUserLogin","setExistingUserLogin","userNotFound","setUserNotFound","thisUser","setThisUser","users","setUsers","setLogIn","initialUserState","isLoggedIn","setIsLoggedIn","handleChange","event","target","id","value","logOut","handleExistingSubmit","console","log","handleNewSubmit","newUser","post","then","res","data","localStorage","setItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../../../styles/LogInModal.css';\nimport { DataContext } from '../../hidden/DataContext';\n\nfunction LogInModal() {\n\n    const initialLoginState ={\n        loggedIn: false,\n        username: '',\n        email: '',\n        password: '',\n        verifyPassword: ''\n    }\n\n    const [loginState, setLoginState] = useState(initialLoginState);\n    const [existingUserLogin, setExistingUserLogin] = useState(true);\n    const [userNotFound, setUserNotFound] = useState(false);\n\n    const { thisUser, setThisUser, users, setUsers, setLogIn, initialUserState, isLoggedIn, setIsLoggedIn } = useContext(DataContext);\n\n    const handleChange = (event) => {\n        setLoginState({ ...loginState, [event.target.id]: event.target.value });\n    };\n\n    const logOut = () => {\n        setThisUser(initialUserState);\n        setUserNotFound(false);\n        setIsLoggedIn(false);\n    }\n\n    const handleExistingSubmit = async () => {\n        console.log(\"logging in\");\n    }\n\n    // const handleSubmit = () => {\n    //     let newPost = {\n    //         username: thisUser.username,\n    //         title: titleValue,\n    //         body: bodyValue\n    //     }\n\n    //     axios.post('http://localhost:4000/posts', newPost)\n    //         .then(getPosts());\n\n    //     setTitleValue('');\n    //     setBodyValue('');\n    //     setAddPost(false);\n\n    // }\n\n    const handleNewSubmit = async () => {\n        console.log(\"creating account\");\n        \n        if (loginState.password !== loginState.verifyPassword){\n            console.log(\"error\");\n        } else{\n            \n            const newUser = {\n                username : loginState.username,\n                email : loginState.email,\n                password : loginState.password\n            }\n\n            axios.post('http://localhost:4000/users', newUser).then((res) => {\n                setThisUser(res.data);\n                localStorage.setItem('user', res.data)\n                console.log(res.data.username)\n            })\n\n        }    \n\n    }\n \n    useEffect(() => {\n        console.log(thisUser)\n    }, [existingUserLogin, thisUser, userNotFound, loginState.loggedIn])\n\n    return (\n        <div className='LogInModal'>\n            <div className='modal'>\n                <div className='modal-textbox'>\n                    <div className='logged-in-as'>\n                        <h5 className='log-in-header'>logged in as</h5>\n                        <h3 className='logged-in-username'>{thisUser.username}</h3>\n                    </div>\n                    {!isLoggedIn && \n                        <div>\n                            <div className='tabs'>\n                                <button className={`existing-user-button tab-button ${(existingUserLogin) ? 'selected' : null}`} type='button' onClick={() => setExistingUserLogin(true)} >existing user</button>\n                                <button className={`new-user-button tab-button ${(existingUserLogin) ? null : 'selected'}`} type='button' onClick={() => setExistingUserLogin(false)} >new user</button>\n                            </div>\n                            {existingUserLogin && \n                                <div className='input-div'>\n                                    <input className='existing-user-input' type='text' placeholder='username' id=\"username\" value={loginState.username} onChange={handleChange} />\n                                    <input className='existing-user-input' type='text' placeholder='password' id=\"password\" value={loginState.password} onChange={handleChange} />\n                                    {(userNotFound) ? <p className='no-user-found'>user doesn't exist</p> : null }\n                                </div>\n                            }\n                            {!existingUserLogin && \n                                <div className='input-div'>\n                                    <input className='existing-user-input' type='text' placeholder='username' id=\"username\" value={loginState.username} onChange={handleChange} />\n                                    <input className='existing-user-input' type='text' placeholder='email' id=\"email\" value={loginState.email} onChange={handleChange} />\n                                    <input className='existing-user-input' type='text' placeholder='password' id=\"password\" value={loginState.password} onChange={handleChange} />\n                                    <input className='existing-user-input' type='text' placeholder='verify password' id=\"verifyPassword\" value={loginState.verifyPassword} onChange={handleChange} />\n                                </div>\n                            }\n                        </div>\n                    }\n                    <div>\n                        {loginState.loggedIn && \n                            <button className='login-form-button' type='button' onClick={logOut} >log out</button>\n                        }\n                        {!loginState.loggedIn && existingUserLogin &&\n                            <button className='login-form-button' type='button' onClick={handleExistingSubmit} >log in</button>\n                        }\n                        {!loginState.loggedIn && !existingUserLogin && \n                            <button className='login-form-button' type='button' onClick={handleNewSubmit} >create account</button>\n                        }\n                        <button className='login-form-button' type='button' onClick={() => setLogIn(false)} >close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LogInModal;"]},"metadata":{},"sourceType":"module"}